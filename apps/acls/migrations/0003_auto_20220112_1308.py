# Generated by Django 3.1.13 on 2022-01-12 05:08

from django.db import migrations


def migrate_json_field(apps, schema_editor):
    """
    migrate JSON field for `users`, `assets`, `system_users`
    sample (field=users):
        old:
        {
            username_group: []
        }

        new:
        {
            strategy: 'all|objects|attrs',
            objects: [],
            attrs: {
                logical_operator: 'and',
                rules: [
                    {
                        attr: 'username_group',
                        operator: '=',
                        value: []
                    }
                ]
            }
        }
    """
    login_asset_acl_model = apps.get_model("acls", "LoginAssetACL")
    acls = login_asset_acl_model.objects.all()
    for acl in acls:
        migrator = ACLMigrator(acl)
        acl.users = migrator.construct_new_users()
        acl.assets = migrator.construct_new_assets()
        acl.system_users = migrator.construct_new_system_users()

    login_asset_acl_model.objects.bulk_update(acls, fields=['users', 'assets', 'system_users'])


class ACLMigrator(object):
    strategy_all = 'all'
    strategy_objects = 'objects'
    strategy_attr = 'attrs'

    rule_logical_operator_and = 'and'

    attr_operator_equal = '='

    def __init__(self, acl):
        self.acl = acl
        self.old_users_value = acl.users
        self.old_assets_value = acl.assets
        self.old_system_users_value = acl.system_users
        self.users_field_attrs = ['username_group']
        self.assets_field_attrs = ['hostname_group', 'ip_group']
        self.system_users_field_attrs = ['name_group', 'username_group', 'protocol_group']

    def construct_new_users(self) -> dict:
        return self.construct_new_field_value('users')

    def construct_new_assets(self) -> dict:
        return self.construct_new_field_value('assets')

    def construct_new_system_users(self) -> dict:
        return self.construct_new_field_value('system_users')

    def construct_new_field_value(self, field_name) -> dict:
        old_field_value = getattr(self, f'old_{field_name}_value', {})
        field_attrs = getattr(self, f'{field_name}_field_attrs', [])

        strategy = self.strategy_attr
        rules = []
        for attr in field_attrs:
            value = old_field_value.get(attr, [])
            if '*' in value:
                strategy = self.strategy_all
            rule = {
                'attr': attr[:-6],  # 删除后面的 _group
                'operator': self.attr_operator_equal,
                'values': value,
            }
            rules.append(rule)

        new_users = {
            'strategy': strategy,
            'objects': [],
            'attrs': {
                'logical_operator': self.rule_logical_operator_and,
                'rules': rules
            }
        }
        return new_users


class Migration(migrations.Migration):

    dependencies = [
        ('acls', '0002_auto_20210926_1047'),
    ]

    operations = [
        migrations.RunPython(migrate_json_field),
    ]
